<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Blog</title><link>https://kaustubhpatange.github.io/blog/</link><description>Recent content in Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Page("Blog") (Kaustubh Patange)</managingEditor><lastBuildDate>Tue, 22 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/" rel="self" type="application/rss+xml"/><item><title>Handle onActivityResult(), the Kotlin way</title><link>https://kaustubhpatange.github.io/blog/post/kotlin-activity-result/</link><pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate><guid>https://kaustubhpatange.github.io/blog/post/kotlin-activity-result/</guid><description>&lt;p>ActivityResult API is an improvement over the traditional &lt;code>onActivityResult()&lt;/code> method. But it can get much better with Kotlin, let&amp;rsquo;s see how?&lt;/p></description></item><item><title>Dagger's implementation of JSR 330</title><link>https://kaustubhpatange.github.io/blog/post/singlecheck-vs-doublecheck/</link><pubDate>Tue, 19 Oct 2021 00:00:00 +0000</pubDate><guid>https://kaustubhpatange.github.io/blog/post/singlecheck-vs-doublecheck/</guid><description>&lt;p>We will see some of the Dagger 2 generated code more specifically on how it uses &lt;code>SingleCheck&amp;lt;T&amp;gt;&lt;/code> &amp;amp; &lt;code>DoubleCheck&amp;lt;T&amp;gt;&lt;/code> implementations of &lt;code>javax.inject.Provider&amp;lt;T&amp;gt;&lt;/code> internally.&lt;/p></description></item><item><title>The undocumented AGP's gradle property.</title><link>https://kaustubhpatange.github.io/blog/post/agp-enableuncompressednativelibs/</link><pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate><guid>https://kaustubhpatange.github.io/blog/post/agp-enableuncompressednativelibs/</guid><description>&lt;p>One of the scariest experience where I was about to break my production app due to my unfamiliarity with AGP&amp;rsquo;s &lt;code>android.bundle.enableUncompressedNativeLibs&lt;/code> gradle property.&lt;/p></description></item><item><title>Parallelism in suspend functions</title><link>https://kaustubhpatange.github.io/blog/post/coroutine-parallelism/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://kaustubhpatange.github.io/blog/post/coroutine-parallelism/</guid><description>&lt;p>We know how to execute parallel suspend functions in a &lt;code>CoroutineScope&lt;/code>, but how to do it within a suspend function that has a return type.&lt;/p></description></item></channel></rss>